## Code :
import cv2
Import keyboard
Import operating system
Import browser
Import random
Import time
Import facial recognition
# Start camera
cap = cv2. VideoCapture (0)
# Give the full path to the Haar Cascade classifier file
face_cascade = cv2.CascadeClassifier(r'C:\Users\HP\Downloads\haarcascade_frontalface_default.xml')< br># Initialization Emotion-based music playlist
playlist_happy = [
r"C:\Users\HP\Downloads\Narendra(MP)\Dooram Karigina.mp3",
# Add path to sad music file 
playlist_sad = [
r"C:\Users\HP\Downloads\Narendra(MP)\Pranam Pothunna.mp3",
# Add path to sad music file
]< br> >playlist_angry = [
r"C:\Users\HP\Downloads\Narendra(MP)\Hukum.mp3",
# Add path current_playlist = playlist_happy # Default playlist is happy music
current_song = 0 # Start the current song >
# Use the system's default media player to play the current song
def play_song():< br> Song_path = current_playlist[current_song]
< br> # System's default media player to open the song use player
webbrowser.open(song_path)
# Switch playlist randomly Function
def switch_playlist ():
global current_playlist
random_emotion = random.choice(['beautiful sad' , 'sad', 'angry'])
if random_emotion == 'happy' :
current_playlist = playlist_happy
elif random_emotion == 'sad':
current_playlist = playlist_sad< br> elif random_emotion == 'angry':
current_playlist = playlist_angry
while: < br> current_playlist = playlist_angry
when:
dbr>Frame from camera
> reject, frame = cap.read()
# Convert frame to grayscale for face detection< br>gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)< br>< br > # To detect faces in frame Use Haar Cascade
faces =face_cascade.detectMultiScale(gray, ScaleFactor=1,3, minNeighbors=5, minSize =(30, 30))
# Check if a face is detected > if len(faces) > 0:
# Randomly switch playback based on detected character list (change to your desired experience) > switch_playlist()
# Play current song
play_song() 
# Wait for the key to move to the next song
> Keyboard.wait(" space ")
# Create the current song index or go back to the first song
current_song = (current_song + 1) % len (current_playlist)
# For faces (x, y, w, h ),
place a rectangle around the detected face:< br> cv2.rectangle(frame, (x, y), (x + w , y + h), (0, 255, 0), 2)
# Image frame
cv2.imshow( 'Face detection audio player',frame)
# 'q If you press the ' key, it will exit the loop
and become cv2. waitKey(1) & 0xFF == ord('q '):
break< br>
# Release the camera and close all OpenCV windows
cap.release()
cv2.destroyerAllWindows()
